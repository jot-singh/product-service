fakestore.api.url=https://fakestoreapi.com
fakestore.api.paths.product=/products
#spring.h2.console.enabled=true
spring.datasource.url= ${DB_JDBC_URL}/products
spring.datasource.username=${DB_USERNANE}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
##spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.path=/h2-console
#spring.h2.console.settings.trace=false
#spring.h2.console.settings.web-allow-others=false
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.flyway.enabled=false
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8444
# OAuth2 Client Properties for Service-to-Service Communication
spring.security.oauth2.client.registration.user-service-client.client-id=product-service
spring.security.oauth2.client.registration.user-service-client.client-secret=product-service-secret
spring.security.oauth2.client.registration.user-service-client.scope=internal.read,internal.write
spring.security.oauth2.client.registration.user-service-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.provider.user-service-provider.token-uri=http://localhost:8444/oauth2/token